version: 2
jobs:
  test_local_docker:
    working_directory: ~/ckanext-datagovtheme
    machine: true
    steps:
      - checkout
      - run:
          name: Start CKAN
          command: |
            docker-compose -f docker-compose.legacy.yml build
            docker-compose -f docker-compose.legacy.yml up -d
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Wait for db
          command: dockerize -wait http://localhost:5000/dataset -timeout 2m
      - run:
          name: Test extension
          command: |
            docker-compose -f docker-compose.legacy.yml logs db
            docker-compose -f docker-compose.legacy.yml logs ckan
            docker-compose -f docker-compose.legacy.yml exec ckan /bin/bash -c "nosetests --ckan --with-pylons=src/ckan/test-catalog-next.ini src_extensions/datagovtheme/ckanext/datagovtheme/tests/nose"
  build_ckan_28:
    working_directory: ~/ckanext-datagovtheme
    machine:
      image: circleci/classic:201708-01
    environment:
      CKANVERSION=2.8
    steps:
      - checkout
      - run:
          name: install and test
          command: bin/travis-build-2.8.bash


workflows:
  version: 2
  build_and_test:
    jobs:
      - test_local_docker
      - build_ckan_28
