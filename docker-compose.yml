---
services:
  ckan:
    image: datagov/ckanext-datagovtheme:${CKAN_VERSION} # ensures docker-compose will rebuild the right image in case we change CKAN_VERSION
    build:
      context: .
      args:
        CKAN_VERSION: ${CKAN_VERSION}
    environment:
      CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@db/ckan_test
      CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@db/datastore_test
      CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@db/datastore_test
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_REDIS_URL: redis://redis:6379/
      CKAN_DATAPUSHER_URL: http://localhost:8080/  # datapusher is not really enabled
      CKAN_SITE_ID: default
      CKAN_SITE_URL: http://ckan:5000
      CKAN_SYSADMIN_NAME: admin
      CKAN_SYSADMIN_PASSWORD: password
      CKAN_SYSADMIN_EMAIL: your_email@example.com
      CKAN__STORAGE_PATH: /var/lib/ckan
      CKAN__PLUGINS: harvest geodatagov datagovtheme spatial_metadata
      PYTHONDONTWRITEBYTECODE: 1
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis
      - solr
    volumes:
      - ./ckanext:/srv/app/ckanext
      - ./test.sh:/srv/app/test.sh
      - ./test.ini:/srv/app/test.ini
      - ./setup.py:/srv/app/setup.py
      - /etc/timezone:/etc/timezone:ro
      - ./docker-entrypoint.d/:/docker-entrypoint.d/
  db:
    image: ckan/ckan-postgres-dev:2.11
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis
  solr:
    image: datagov/catalog.data.gov.solr:latest
    ports:
      - "8983:8983"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8983/solr/admin/ping?wt=json", "||", "exit", "1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
